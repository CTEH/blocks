<%= table.define :edit do |record, options| %>
  <%= link_to "Edit", [:edit, options[:scope], record].flatten %>
<% end %>

<%= table.define :show do |record, options| %>
  <%= link_to "Show", [options[:scope], record].flatten %>
<% end %>

<%= table.define :delete do |record, options| %>
  <%= link_to "Delete", [options[:scope], record].flatten, :method => "delete", :confirm => "Are you sure you want to delete this #{record.class.to_s.humanize}?" %>
<% end %>

<%= table.define :thead do %>
  <thead>
    <%= table.use :header_row %>
  </thead>
<% end %>

<%= table.define :header_row do %>
  <tr>
    <%= table.use :header_columns %>
  </tr>
<% end %>

<%= table.define :header_columns do |options| %>
  <% table.columns.each do |column| %>
    <%= content_tag :th, options.merge(column.options)[:header_html] do %>
      <%= table.use "#{column.name.to_s}_header", options.merge(column.options) %>
    <% end %>
  <% end %>
<% end %>

<% table.columns.each do |column| %>  
  <%= table.define "#{column.name.to_s}_header", :column => column do |options| %>
    <% if options[:sortable] %>
      <%= table.use "#{options[:column].name.to_s}_header_sortable_link", options %>
    <% else %>
      <%= options[:label] ? options[:label] : options[:column].name.to_s.titleize %>
    <% end %>
  <% end %>
  
  <%= table.define "#{column.name.to_s}_header_sortable_link", :column => column do |options| %>
    <%= table.use :header_sortable_link, options %>
  <% end %>
<% end %>
 
<%= table.define :header_sortable_link do |options| %>
  <% label = (options[:label] ? options[:label] : options[:column].name.to_s.titleize) %>
  <% sort_mode = ((params[:order] != options[:order].to_s or params[:sort_mode] == "desc") ? "asc" : "desc") %>
  <% ui_icon = sort_mode == "desc" ? "ui-icon-triangle-1-s" : "ui-icon-triangle-1-n" %>
  <% parameters = params.merge({:order => (options[:order] ? options[:order] : options[:column].name), :sort_mode => sort_mode}) %>

  <%= link_to label, parameters %>
  <span class="ui-icon <%= ui_icon %>" style="display:<%= params[:order] == options[:order].to_s ? "inline-block" : "none" %>; float:none"></span>
<% end %>

<%= table.define :tbody do %>
  <tbody>
    <%= table.use :rows %>
  </tbody>
<% end %>

<%= table.define :rows do %>
  <% records.each do |record| %>
    <%= table.use :row, record %>
  <% end %>
<% end %>

<%= table.define :row do |record, options| %>
  <%= content_tag :tr, evaluated_content_options(options[:row_html], options) do %>
    <%= table.use :data_columns, record, options %>
  <% end %>
<% end %>

<%= table.define :data_columns do |record, options| %>
  <% table.columns.each do |column| %>
    <%= content_tag :td, options.merge(column.options)[:column_html] do %>
      <%= table.use column, record, options.merge(:column => column) %>
    <% end %>
  <% end %>
<% end %>

<% table.columns.each do |column| %>
  <%= table.define column.name, :column => column do |record, options| %>
    <%= record.send(options[:column].name) %>
  <% end %>
<% end %>

<%= table.use :table do |options| %>
  <%= content_tag :table, options[:table_html] do %>
    <%= table.use :thead %>
    <%= table.use :tbody %>
  <% end %>
<% end %>